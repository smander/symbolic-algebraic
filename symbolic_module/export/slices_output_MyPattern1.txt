=== Exported 11 Slices ===

Slice 0:
  Step 0: 0x40f500:	endbr64	
  Step 1: 0x40f504:	sub	rsp, 0x118
  Step 2: 0x40f50b:	mov	r8d, edi
  Step 3: 0x40f50e:	xor	edi, edi
  Step 4: 0x40f510:	movdqa	xmm0, xmmword ptr [rip + 0x86348]
  Step 5: 0x40f518:	mov	rax, qword ptr fs:[0x28]
  Step 6: 0x40f521:	mov	qword ptr [rsp + 0x108], rax
  Step 7: 0x40f529:	xor	eax, eax
  Step 8: 0x40f52b:	mov	r9, rsp
  Step 9: 0x40f52e:	mov	eax, 0xe
  Step 10: 0x40f533:	lea	rsi, [rsp + 0x80]
  Step 11: 0x40f53b:	movaps	xmmword ptr [rsp + 0x80], xmm0
  Step 12: 0x40f543:	pcmpeqd	xmm0, xmm0
  Step 13: 0x40f547:	mov	r10d, 8
  Step 14: 0x40f54d:	mov	rdx, r9
  Step 15: 0x40f550:	movaps	xmmword ptr [rsp + 0x90], xmm0
  Step 16: 0x40f558:	movaps	xmmword ptr [rsp + 0xa0], xmm0
  Step 17: 0x40f560:	movaps	xmmword ptr [rsp + 0xb0], xmm0
  Step 18: 0x40f568:	movaps	xmmword ptr [rsp + 0xc0], xmm0
  Step 19: 0x40f570:	movaps	xmmword ptr [rsp + 0xd0], xmm0
  Step 20: 0x40f578:	movaps	xmmword ptr [rsp + 0xe0], xmm0
  Step 21: 0x40f580:	movaps	xmmword ptr [rsp + 0xf0], xmm0
  Step 22: 0x40f588:	syscall	
  Step 23: 0x40f58a:	mov	ecx, 0x27
  Step 24: 0x40f58f:	mov	eax, ecx
  Step 25: 0x40f591:	syscall	
  Step 26: 0x40f593:	mov	rdi, rax
  Step 27: 0x40f596:	mov	eax, 0xba
  Step 28: 0x40f59b:	syscall	

Slice 1:
  Step 0: 0x4505ef:	mov	edi, edx
  Step 1: 0x4505f1:	mov	eax, r8d
  Step 2: 0x4505f4:	syscall	
  Step 3: 0x4505f6:	cmp	rax, -0x1000
  Step 4: 0x4505fc:	jbe	0x4505e0
  Step 5: 0x4505e0:	mov	edi, edx
  Step 6: 0x4505e2:	mov	eax, esi
  Step 7: 0x4505e4:	syscall	

Slice 2:
  Step 0: 0x4012ba:	xor	r10d, r10d
  Step 1: 0x4012bd:	mov	edx, 1
  Step 2: 0x4012c2:	mov	esi, 0x81
  Step 3: 0x4012c7:	mov	eax, 0xca
  Step 4: 0x4012cc:	lea	rdi, [rip + 0xc14fd]
  Step 5: 0x4012d3:	syscall	
  Step 6: 0x4012d5:	mov	edi, 6
  Step 7: 0x4012da:	call	0x40f500
  Step 8: 0x40f500:	endbr64	
  Step 9: 0x40f504:	sub	rsp, 0x118
  Step 10: 0x40f50b:	mov	r8d, edi
  Step 11: 0x40f50e:	xor	edi, edi
  Step 12: 0x40f510:	movdqa	xmm0, xmmword ptr [rip + 0x86348]
  Step 13: 0x40f518:	mov	rax, qword ptr fs:[0x28]
  Step 14: 0x40f521:	mov	qword ptr [rsp + 0x108], rax
  Step 15: 0x40f529:	xor	eax, eax
  Step 16: 0x40f52b:	mov	r9, rsp
  Step 17: 0x40f52e:	mov	eax, 0xe
  Step 18: 0x40f533:	lea	rsi, [rsp + 0x80]
  Step 19: 0x40f53b:	movaps	xmmword ptr [rsp + 0x80], xmm0
  Step 20: 0x40f543:	pcmpeqd	xmm0, xmm0
  Step 21: 0x40f547:	mov	r10d, 8
  Step 22: 0x40f54d:	mov	rdx, r9
  Step 23: 0x40f550:	movaps	xmmword ptr [rsp + 0x90], xmm0
  Step 24: 0x40f558:	movaps	xmmword ptr [rsp + 0xa0], xmm0
  Step 25: 0x40f560:	movaps	xmmword ptr [rsp + 0xb0], xmm0
  Step 26: 0x40f568:	movaps	xmmword ptr [rsp + 0xc0], xmm0
  Step 27: 0x40f570:	movaps	xmmword ptr [rsp + 0xd0], xmm0
  Step 28: 0x40f578:	movaps	xmmword ptr [rsp + 0xe0], xmm0
  Step 29: 0x40f580:	movaps	xmmword ptr [rsp + 0xf0], xmm0
  Step 30: 0x40f588:	syscall	

Slice 3:
  Step 0: 0x41b128:	mov	rsi, rbx
  Step 1: 0x41b12b:	mov	edi, 2
  Step 2: 0x41b130:	mov	eax, r9d
  Step 3: 0x41b133:	syscall	
  Step 4: 0x41b135:	cmp	rax, -4
  Step 5: 0x41b139:	je	0x41b128
  Step 6: 0x41b128:	mov	rsi, rbx
  Step 7: 0x41b12b:	mov	edi, 2
  Step 8: 0x41b130:	mov	eax, r9d
  Step 9: 0x41b133:	syscall	

Slice 4:
  Step 0: 0x40f58a:	mov	ecx, 0x27
  Step 1: 0x40f58f:	mov	eax, ecx
  Step 2: 0x40f591:	syscall	
  Step 3: 0x40f593:	mov	rdi, rax
  Step 4: 0x40f596:	mov	eax, 0xba
  Step 5: 0x40f59b:	syscall	
  Step 6: 0x40f59d:	mov	esi, eax
  Step 7: 0x40f59f:	mov	edx, r8d
  Step 8: 0x40f5a2:	mov	eax, 0xea
  Step 9: 0x40f5a7:	syscall	

Slice 5:
  Step 0: 0x40f59d:	mov	esi, eax
  Step 1: 0x40f59f:	mov	edx, r8d
  Step 2: 0x40f5a2:	mov	eax, 0xea
  Step 3: 0x40f5a7:	syscall	
  Step 4: 0x40f5a9:	cmp	rax, -0x1000
  Step 5: 0x40f5af:	ja	0x40f5f0
  Step 6: 0x40f5b1:	mov	r8d, eax
  Step 7: 0x40f5b4:	mov	r10d, 8
  Step 8: 0x40f5ba:	xor	edx, edx
  Step 9: 0x40f5bc:	mov	rsi, r9
  Step 10: 0x40f5bf:	mov	edi, 2
  Step 11: 0x40f5c4:	mov	eax, 0xe
  Step 12: 0x40f5c9:	syscall	

Slice 6:
  Step 0: 0x41aea8:	mov	edx, 1
  Step 1: 0x41aead:	mov	rsi, rbx
  Step 2: 0x41aeb0:	mov	edi, 2
  Step 3: 0x41aeb5:	mov	eax, r9d
  Step 4: 0x41aeb8:	syscall	
  Step 5: 0x41aeba:	cmp	rax, -4
  Step 6: 0x41aebe:	je	0x41aea8
  Step 7: 0x41aea8:	mov	edx, 1
  Step 8: 0x41aead:	mov	rsi, rbx
  Step 9: 0x41aeb0:	mov	edi, 2
  Step 10: 0x41aeb5:	mov	eax, r9d
  Step 11: 0x41aeb8:	syscall	

Slice 7:
  Step 0: 0x4028b0:	xor	edi, edi
  Step 1: 0x4028b2:	mov	eax, edx
  Step 2: 0x4028b4:	syscall	
  Step 3: 0x4028b6:	jmp	0x4028b0
  Step 4: 0x4028b0:	xor	edi, edi
  Step 5: 0x4028b2:	mov	eax, edx
  Step 6: 0x4028b4:	syscall	

Slice 8:
  Step 0: 0x40f4fb:	nop	dword ptr [rax + rax]
  Step 1: 0x40f500:	endbr64	
  Step 2: 0x40f504:	sub	rsp, 0x118
  Step 3: 0x40f50b:	mov	r8d, edi
  Step 4: 0x40f50e:	xor	edi, edi
  Step 5: 0x40f510:	movdqa	xmm0, xmmword ptr [rip + 0x86348]
  Step 6: 0x40f518:	mov	rax, qword ptr fs:[0x28]
  Step 7: 0x40f521:	mov	qword ptr [rsp + 0x108], rax
  Step 8: 0x40f529:	xor	eax, eax
  Step 9: 0x40f52b:	mov	r9, rsp
  Step 10: 0x40f52e:	mov	eax, 0xe
  Step 11: 0x40f533:	lea	rsi, [rsp + 0x80]
  Step 12: 0x40f53b:	movaps	xmmword ptr [rsp + 0x80], xmm0
  Step 13: 0x40f543:	pcmpeqd	xmm0, xmm0
  Step 14: 0x40f547:	mov	r10d, 8
  Step 15: 0x40f54d:	mov	rdx, r9
  Step 16: 0x40f550:	movaps	xmmword ptr [rsp + 0x90], xmm0
  Step 17: 0x40f558:	movaps	xmmword ptr [rsp + 0xa0], xmm0
  Step 18: 0x40f560:	movaps	xmmword ptr [rsp + 0xb0], xmm0
  Step 19: 0x40f568:	movaps	xmmword ptr [rsp + 0xc0], xmm0
  Step 20: 0x40f570:	movaps	xmmword ptr [rsp + 0xd0], xmm0
  Step 21: 0x40f578:	movaps	xmmword ptr [rsp + 0xe0], xmm0
  Step 22: 0x40f580:	movaps	xmmword ptr [rsp + 0xf0], xmm0
  Step 23: 0x40f588:	syscall	
  Step 24: 0x40f500:	endbr64	
  Step 25: 0x40f504:	sub	rsp, 0x118
  Step 26: 0x40f50b:	mov	r8d, edi
  Step 27: 0x40f50e:	xor	edi, edi
  Step 28: 0x40f510:	movdqa	xmm0, xmmword ptr [rip + 0x86348]
  Step 29: 0x40f518:	mov	rax, qword ptr fs:[0x28]
  Step 30: 0x40f521:	mov	qword ptr [rsp + 0x108], rax
  Step 31: 0x40f529:	xor	eax, eax
  Step 32: 0x40f52b:	mov	r9, rsp
  Step 33: 0x40f52e:	mov	eax, 0xe
  Step 34: 0x40f533:	lea	rsi, [rsp + 0x80]
  Step 35: 0x40f53b:	movaps	xmmword ptr [rsp + 0x80], xmm0
  Step 36: 0x40f543:	pcmpeqd	xmm0, xmm0
  Step 37: 0x40f547:	mov	r10d, 8
  Step 38: 0x40f54d:	mov	rdx, r9
  Step 39: 0x40f550:	movaps	xmmword ptr [rsp + 0x90], xmm0
  Step 40: 0x40f558:	movaps	xmmword ptr [rsp + 0xa0], xmm0
  Step 41: 0x40f560:	movaps	xmmword ptr [rsp + 0xb0], xmm0
  Step 42: 0x40f568:	movaps	xmmword ptr [rsp + 0xc0], xmm0
  Step 43: 0x40f570:	movaps	xmmword ptr [rsp + 0xd0], xmm0
  Step 44: 0x40f578:	movaps	xmmword ptr [rsp + 0xe0], xmm0
  Step 45: 0x40f580:	movaps	xmmword ptr [rsp + 0xf0], xmm0
  Step 46: 0x40f588:	syscall	
  Step 47: 0x40f58a:	mov	ecx, 0x27
  Step 48: 0x40f58f:	mov	eax, ecx
  Step 49: 0x40f591:	syscall	

Slice 9:
  Step 0: 0x4028f4:	mov	eax, 1
  Step 1: 0x4028f9:	or	eax, 2
  Step 2: 0x4028fc:	mov	edx, eax
  Step 3: 0x4028fe:	mov	esi, edx
  Step 4: 0x402900:	mov	edi, 0x3002
  Step 5: 0x402905:	mov	eax, 0x9e
  Step 6: 0x40290a:	syscall	
  Step 7: 0x4028f9:	or	eax, 2
  Step 8: 0x4028fc:	mov	edx, eax
  Step 9: 0x4028fe:	mov	esi, edx
  Step 10: 0x402900:	mov	edi, 0x3002
  Step 11: 0x402905:	mov	eax, 0x9e
  Step 12: 0x40290a:	syscall	
  Step 13: 0x4028fe:	mov	esi, edx
  Step 14: 0x402900:	mov	edi, 0x3002
  Step 15: 0x402905:	mov	eax, 0x9e
  Step 16: 0x40290a:	syscall	

Slice 10:
  Step 0: 0x4650f4:	nop	word ptr cs:[rax + rax]
  Step 1: 0x4650fe:	nop	
  Step 2: 0x465100:	nop	
  Step 3: 0x465101:	nop	word ptr cs:[rax + rax]
  Step 4: 0x46510c:	nop	dword ptr [rax]
  Step 5: 0x465110:	mov	rax, 0xf
  Step 6: 0x465117:	syscall	
  Step 7: 0x465100:	nop	
  Step 8: 0x465101:	nop	word ptr cs:[rax + rax]
  Step 9: 0x46510c:	nop	dword ptr [rax]
  Step 10: 0x465110:	mov	rax, 0xf
  Step 11: 0x465117:	syscall	
  Step 12: 0x465110:	mov	rax, 0xf
  Step 13: 0x465117:	syscall	

=== End of Export ===
